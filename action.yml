name: 'Compile GAP package documentation'
description: 'Compile documentation with or without latex'
inputs:
  use-latex:
    description: 'if true, then install and use latex'
    required: false
    default: 'false'
runs:
  using: "composite"
  steps:
    - name: "Install TeX Live"
      shell: bash
      run: |
        if [ ${{ inputs.use-latex }} == 'true' ]; then
          packages=(
            texlive-latex-base
            texlive-latex-recommended
            texlive-latex-extra
            texlive-extra-utils
            texlive-fonts-recommended
            texlive-fonts-extra
          )
          sudo apt-get install "${packages[@]}"
        fi

    - name: "Compile documentation"
      shell: bash
      run: |
        if [ -f "makedoc.g" ]; then
          $HOME/gap/bin/gap.sh -l "$PWD/gaproot;" --quitonbreak makedoc.g -c "QUIT;"
        elif [ -x "doc/make_doc" ]; then
          #Â If the package is called <pkg_name>, then the <doc/make_doc> script
          # most likely assumes that it has been called from the within the
          # <pkg_name>/doc folder, and that the directory hierarchy is
          # <gaproot>/pkg/<pkg_name>/doc/make_doc, and relies on this to access
          # several file.
          # So we create symlinks to some potentially-useful GAP directories.
          [ -d ../../doc ] && echo "../../doc exists" || ln -s $HOME/gap/doc ../../doc
          [ -d ../../etc ] && echo "../../etc exists" || ln -s $HOME/gap/etc ../../etc
          cd doc && ./make_doc
        else
          echo "no makedoc.g file or doc/make_doc script found!"
          exit 1
        fi
      env:
        SOURCE_DATE_EPOCH: 0 # prevent time stamps in generated PDF
